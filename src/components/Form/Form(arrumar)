import {
  Button,
  Flex,
  Input,
  Radio,
  RadioGroup,
  Stack,
} from "@chakra-ui/react";
import { yupResolver } from "@hookform/resolvers/yup";
import { useState } from "react";
import {  SubmitHandler, useForm } from "react-hook-form";
import * as yup from "yup";

type SignInFormData = {
  email?: string;
  name?: string;
  cpf?: string;
};

const signInFormSchema = yup.object().shape({
  email: yup.string().required("E-mail obrigatório.").email("E-mail inválido"),
  cpf: yup
    .string()
    .required("CPF obrigatório")
    .min(11, "É necessário informar o CPF"),
  name: yup.string().required("Nome obrigatório"),
});

export function Form() {
  const { register, handleSubmit, formState } = useForm({
    resolver: yupResolver(signInFormSchema),
  });

  const handleSignIn: SubmitHandler<SignInFormData> = async (values) => {
    await new Promise((resolve) => setTimeout(resolve, 2000));
    console.log(values);
  };

  const { errors } = formState;

  const [value, setValue] = useState("1");

  return (
    <Flex
      as="form"
      flexDir="column"
      maxW="340px"
      h="100%"
      onSubmit={handleSubmit(handleSignIn)}
    >
      <Stack spacing="1">
        <Input
          label="Nome Completo:"
          type="text"
          {...register("name")}
          error={errors.name}
        />
        <Input
          type="email"
          label="E-mail:"
          {...register("email")}
          error={errors.email}
        />
        <Input
          type="number"
          label="CPF:"
          {...register("cpf")}
          error={errors.cpf}
        />
        <RadioGroup onChange={setValue} value={value}>
          <Flex align="center" flexDirection="row" gap="20px">
            <Radio borderColor="gray.700" value="1" name="gen">
              Masculino
            </Radio>
            <Radio borderColor="gray.700" value="2" name="gen">
              Feminino
            </Radio>
          </Flex>
        </RadioGroup>
      </Stack>

      <Button
        w="340px"
        h="39px"
        type="submit"
        cursor="pointer"
        mt="64px"
        isLoading={formState.isSubmitting}
        borderColor="gray.700"
        border="1px"
        bgColor="white.100"
        _hover={{
          bgColor: "white.100",
        }}
      >
        Enviar
      </Button>
    </Flex>
  );
}
